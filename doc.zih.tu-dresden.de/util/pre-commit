#!/bin/bash
exit_ok=yes
files=$(git diff-index --cached --name-only HEAD)

function testPath(){
path_to_test=doc.zih.tu-dresden.de/docs/$1
test -f "$path_to_test" || echo $path_to_test does not exist
}

if ! `docker image inspect hpc-compendium:latest > /dev/null 2>&1`
then
  echo Container not built, building...
  docker build -t hpc-compendium .
fi

export -f testPath

for file in $files
do
  if [ $file == doc.zih.tu-dresden.de/mkdocs.yml ]
  then
    echo Testing $file
    sed -n '/^ *- /s#.*: \([A-Za-z_/]*.md\).*#\1#p' doc.zih.tu-dresden.de/mkdocs.yml | xargs -L1 -I {} bash -c "testPath '{}'"
    if [ $? -ne 0 ]
    then
      exit_ok=no
    fi
  elif [[ $file =~ ^doc.zih.tu-dresden.de/(.*.md)$ ]]
  then
    filepattern=${BASH_REMATCH[1]}

    #lint
    docker run --name=hpc-compendium --rm -w /docs --mount src="$(pwd)"/doc.zih.tu-dresden.de,target=/docs,type=bind hpc-compendium markdownlint $filepattern
    if [ $? -ne 0 ]
    then
      exit_ok=no
    fi

    #link-check
    docker run --name=hpc-compendium --rm -w /docs --mount src="$(pwd)"/doc.zih.tu-dresden.de,target=/docs,type=bind hpc-compendium markdown-link-check $filepattern
    if [ $? -ne 0 ]
    then
      exit_ok=no
    fi
  fi
done

#spell-check
docker run --name=hpc-compendium --rm -w /docs --mount src="$(pwd)",target=/docs,type=bind hpc-compendium ./doc.zih.tu-dresden.de/util/check-spelling.sh
if [ $? -ne 0 ]
then
  exit_ok=no
fi

#forbidden words checking
docker run --name=hpc-compendium --rm -w /docs --mount src="$(pwd)",target=/docs,type=bind hpc-compendium ./doc.zih.tu-dresden.de/util/grep-forbidden-words.sh
if [ $? -ne 0 ]
then
  exit_ok=no
fi

if [ $exit_ok == yes ]
then
  exit 0
else
  exit 1
fi
