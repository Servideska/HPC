#!/bin/bash
function testPath(){
  path_to_test="doc.zih.tu-dresden.de/docs/$1"
  test -f "$path_to_test" || echo "$path_to_test does not exist"
}

function runInDocker(){
  docker run --name=hpc-compendium --rm -w /docs --mount src="$(pwd)",target=/docs,type=bind hpc-compendium "$@"
}
function runInDockerDocOnly(){
  docker run --name=hpc-compendium --rm -w /docs --mount src="$(pwd)"/doc.zih.tu-dresden.de,target=/docs,type=bind hpc-compendium "$@"
}

if ! docker image inspect hpc-compendium:latest > /dev/null 2>&1; then
  echo Container not built, building...
  docker build -t hpc-compendium .
fi

export -f testPath

exit_ok=yes
branch="origin/${CI_MERGE_REQUEST_TARGET_BRANCH_NAME:-preview}"
if [ -f "$GIT_DIR/MERGE_HEAD" ]; then
  source_hash=$(git merge-base HEAD "$branch")
else
  source_hash=$(git rev-parse HEAD)
fi
#Remove everything except lines beginning with --- or +++
files=$(git diff "$source_hash" | sed -E -n 's#^(---|\+\+\+) ((/|./)[^[:space:]]+)$#\2#p')
#Assume that we have pairs of lines (starting with --- and +++).
while read -r; do
  read -r newfile
  
  if [ "$newfile" == doc.zih.tu-dresden.de/mkdocs.yml ]; then
    echo Testing "$newfile"
    if ! sed -n '/^ *- /s#.*: \([A-Za-z_/]*.md\).*#\1#p' doc.zih.tu-dresden.de/mkdocs.yml | xargs -L1 -I {} bash -c "testPath '{}'"; then
      echo -e "\tFailed"
      exit_ok=no
    fi
  elif [[ "$newfile" =~ ^b/doc.zih.tu-dresden.de/(.*.md)$ ]]; then
    doc_filepath="${BASH_REMATCH[1]}"

    echo "Linting..."
    if ! runInDockerDocOnly markdownlint "$doc_filepath"; then
      echo -e "\tFailed"
      exit_ok=no
    fi

    echo "Checking links..."
    if ! runInDockerDocOnly markdown-link-check "$doc_filepath"; then
      echo -e "\tFailed"
      exit_ok=no
    fi
  fi
done <<< "$files"

echo "Testing syntax of bash files..."
if ! runInDocker ./doc.zih.tu-dresden.de/util/check-bash-syntax.sh; then
  echo -e "\tFailed"
  exit_ok=no
fi

echo "Spell-checking..."
if ! runInDocker ./doc.zih.tu-dresden.de/util/check-spelling.sh; then
  echo -e "\tFailed"
  exit_ok=no
fi

echo "Forbidden words checking..."
if ! runInDocker ./doc.zih.tu-dresden.de/util/grep-forbidden-patterns.sh; then
  echo -e "\tFailed"
  exit_ok=no
fi

echo "Looking for empty files..."
if ! runInDocker ./doc.zih.tu-dresden.de/util/check-empty-page.sh; then
  echo -e "\tFailed"
  exit_ok=no
fi

echo "Looking for files with templates but without examples..."
if ! runInDocker ./doc.zih.tu-dresden.de/util/check-templated-code-snippets.sh; then
  echo -e "\tFailed"
  exit_ok=no
fi

echo "Checking code styling for files..."
if ! runInDocker ./doc.zih.tu-dresden.de/util/check-code-style.sh; then
  echo -e "\tFailed"
  exit_ok=no
fi

if [ $exit_ok == yes ]; then
  exit 0
else
  exit 1
fi
